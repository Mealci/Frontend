name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  pull-requests: write

jobs:
  ci-push:
    name: V√©rifications CI (Base)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: V√©rifier si la CI doit √™tre ex√©cut√©e
      id: check_run
      run: |
        if [[ ${{ github.event_name }} == 'push' ]]; then
          PR_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ github.ref_name }}&state=open" \
                   | jq -r '.[0].url')
          if [[ $PR_URL != "null" ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "Une PR est active pour cette branche. Skipping CI pour le push."
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi

    - name: Configuration de Flutter
      if: steps.check_run.outputs.skip != 'true'
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.2'
        channel: 'stable'
    
    - name: D√©sactiver les animations CLI
      if: steps.check_run.outputs.skip != 'true'
      run: flutter config --no-cli-animations
    
    - name: Obtenir les d√©pendances
      if: steps.check_run.outputs.skip != 'true'
      run: |
        echo -e "\e[1;34müîç Obtention des d√©pendances...\e[0m"
        flutter pub get
        echo -e "\e[1;32m‚úÖ D√©pendances r√©cup√©r√©es avec succ√®s !\e[0m"
    
    - name: Formater le code
      if: steps.check_run.outputs.skip != 'true' && github.event_name != 'pull_request'
      run: |
        echo -e "\e[1;34müñåÔ∏è Formatage du code...\e[0m"
        dart format --set-exit-if-changed .
        echo -e "\e[1;32m‚úÖ Code format√© avec succ√®s !\e[0m"
    
    - name: Ex√©cuter les tests
      if: steps.check_run.outputs.skip != 'true' && github.event_name != 'pull_request'
      run: |
        echo -e "\e[1;34müß™ Ex√©cution des tests...\e[0m"
        echo -e "Place holder pour flutter test"
        # flutter test
        echo -e "\e[1;32m‚úÖ Tests termin√©s avec succ√®s !\e[0m"
    
    - name: V√©rifier la porte de qualit√©
      if: steps.check_run.outputs.skip != 'true' && success() && github.event_name != 'pull_request'
      run: |
        echo -e "\e[1;32m‚úÖ Porte de qualit√© de base pass√©e\e[0m"
    
    - name: Notifier l'√©chec
      if: steps.check_run.outputs.skip != 'true' && failure() && github.event_name != 'pull_request'
      run: |
        echo -e "\e[1;31m‚ùå Les v√©rifications de base ont √©chou√©. Veuillez corriger les probl√®mes et mettre √† jour.\e[0m"
        exit 1

  ci-pr:
    name: V√©rifications CI (Pull Request)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configuration de Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
      
      - name: D√©sactiver les animations CLI
        run: flutter config --no-cli-animations

      - name: Analyser le code
        id: analyze
        continue-on-error: true
        run: |
          echo -e "\e[1;34müîé Analyse du code...\e[0m"
          flutter analyze > flutter_analysis.txt 2>&1
          echo "flutter_analysis<<EOF" >> $GITHUB_OUTPUT
          cat flutter_analysis.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          if grep -q "No issues found!" flutter_analysis.txt; then
            echo "analyze_error=false" >> $GITHUB_OUTPUT
            echo -e "\e[1;32m‚úÖ Analyse du code termin√©e sans erreur !\e[0m"
          else
            echo "analyze_error=true" >> $GITHUB_OUTPUT
            echo -e "\e[1;31m‚ùå Erreurs d√©tect√©es lors de l'analyse du code.\e[0m"
            exit 1
          fi

      - name: Commenter l'erreur d'analyse
        if: steps.analyze.outputs.analyze_error == 'true'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ‚ùå Rapport CI : Erreur d'analyse du code
            ### Analyse Flutter
            ```
            ${{ steps.analyze.outputs.flutter_analysis }}
            ```
            Des probl√®mes ont √©t√© d√©tect√©s lors de l'analyse. Veuillez corriger ces probl√®mes avant de fusionner.

      - name: V√©rifier le statut de l'analyse
        if: steps.analyze.outputs.analyze_error == 'true'
        run: exit 1

      - name: Notification de succ√®s
        if: steps.analyze.outputs.analyze_error != 'true'
        run: |
          echo -e "\e[1;32m‚úÖ Toutes les v√©rifications CI sont pass√©es avec succ√®s !\e[0m"

    #     - name: Ex√©cuter les tests
    #   id: test
    #   run: |
    #     echo -e "\e[1;34müß™ Ex√©cution des tests...\e[0m"
    #     if flutter test > test_output.txt 2>&1; then
    #       echo "test_error=false" >> $GITHUB_OUTPUT
    #     else
    #       echo "test_error=true" >> $GITHUB_OUTPUT
    #       echo "test_output<<EOF" >> $GITHUB_OUTPUT
    #       cat test_output.txt >> $GITHUB_OUTPUT
    #       echo "EOF" >> $GITHUB_OUTPUT
    #       exit 1
    #     fi
    #     echo -e "\e[1;32m‚úÖ Tests termin√©s !\e[0m"

    # - name: Commenter l'erreur de test
    #   if: failure() && steps.test.outputs.test_error == 'true'
    #   uses: peter-evans/create-or-update-comment@v3
    #   with:
    #     issue-number: ${{ github.event.pull_request.number }}
    #     body: |
    #       ## ‚ùå Rapport CI : Erreur de tests
    #       ```
    #       ${{ steps.test.outputs.test_output }}
    #       ```
    #       Des erreurs ont √©t√© d√©tect√©es lors de l'ex√©cution des tests. Veuillez corriger ces probl√®mes avant de fusionner.

    # - name: V√©rification des vuln√©rabilit√©s
    #   id: vulnerability
    #   run: |
    #     echo -e "\e[1;34müõ°Ô∏è V√©rification des vuln√©rabilit√©s connues...\e[0m"
    #     vulnerability_output=""
    #     while read pkg; do
    #       result=$(curl -s "https://pub.dev/api/packages/${pkg%@*}/versions/${pkg#*@}" | jq -r '.vulnerability')
    #       if [ "$result" != "null" ]; then
    #         vulnerability_output+="‚ö†Ô∏è Vuln√©rabilit√© d√©tect√©e pour $pkg: $result\n"
    #       fi
    #     done < <(flutter pub deps --json | jq -r '.packages[] | .name + "@" + .version')
    #     if [ -n "$vulnerability_output" ]; then
    #       echo "vuln_error=true" >> $GITHUB_OUTPUT
    #       echo "vuln_output<<EOF" >> $GITHUB_OUTPUT
    #       echo "$vulnerability_output" >> $GITHUB_OUTPUT
    #       echo "EOF" >> $GITHUB_OUTPUT
    #       exit 1
    #     else
    #       echo "vuln_error=false" >> $GITHUB_OUTPUT
    #     fi
    #     echo -e "\e[1;32m‚úÖ V√©rification des vuln√©rabilit√©s termin√©e !\e[0m"

    # - name: Commenter les vuln√©rabilit√©s
    #   if: failure() && steps.vulnerability.outputs.vuln_error == 'true'
    #   uses: peter-evans/create-or-update-comment@v3
    #   with:
    #     issue-number: ${{ github.event.pull_request.number }}
    #     body: |
    #       ## ‚ö†Ô∏è Rapport CI : Vuln√©rabilit√©s d√©tect√©es
    #       ```
    #       ${{ steps.vulnerability.outputs.vuln_output }}
    #       ```
    #       Des vuln√©rabilit√©s ont √©t√© d√©tect√©es dans les d√©pendances. Veuillez examiner et mettre √† jour les d√©pendances concern√©es avant de fusionner.
